export const makeItStandard=t=>{let e=new ThreeVariableEquation(t),n=e.buidlatexFromRawInput(),a=_equationVarAndConstSeparator(e),r=buildLatexVarFromLeftAndConstFromRight(a),o=_likeVariableAndConstantAdder(a);return[n,r,buildLatexVarFromLeftAndConstFromRight(o)]};class ThreeVariableEquation{constructor(t){var e,n,a,r,o,s;this.rawInputEquation=t;let d=t.replace(/\s*/g,""),l=(null!==(e=d.match(/.*(?=\=)/))&&void 0!==e?e:[""])[0],i=(null!==(n=d.match(/(?<=\=).*/))&&void 0!==n?n:[""])[0];this.leftSideCoeffVarAndConstantTree={CoeffAndVar:null!==(a=l.match(/(\+|\-)?[\d]*[A-Za-z]/g))&&void 0!==a?a:[],Constants:null!==(r=l.match(/(\+|\-)?[\d]{1,}(?![A-Za-z0-9])/g))&&void 0!==r?r:[]},this.rightSideCoeffVarAndConstantTree={CoeffAndVar:null!==(o=i.match(/(\+|\-)?[\d]*[A-Za-z]/g))&&void 0!==o?o:[],Constants:null!==(s=i.match(/(\+|\-)?[\d]{1,}(?![A-Za-z0-9])/g))&&void 0!==s?s:[]}}buidlatexFromRawInput(){return this.rawInputEquation.replace(/([A-Za-z])/g,"\text{$1}")}}const buildLatexVarFromLeftAndConstFromRight=t=>{let e="";return t.leftSideCoeffVarAndConstantTree.CoeffAndVar.map(t=>{e+=t.replace(/([A-Za-z])/,"\text{$1}")}),e+="=",0!==t.rightSideCoeffVarAndConstantTree.Constants.length?t.rightSideCoeffVarAndConstantTree.Constants.map(t=>{e+=t}):e+="0",e},_equationVarAndConstSeparator=t=>(t.leftSideCoeffVarAndConstantTree.Constants.map(e=>{var n,a,r;let o={_sign:"",_value:(null!==(n=e.match(/[0-9]{1,}/))&&void 0!==n?n:[""])[0]};1===(null!==(a=e.match(/[-]/))&&void 0!==a?a:[]).length?o._sign="-":((null!==(r=e.match(/[+]/))&&void 0!==r?r:[]).length,o._sign="+"),t.rightSideCoeffVarAndConstantTree.Constants.push(`${"+"===o._sign?"-":"+"}${o._value}`)}),t.rightSideCoeffVarAndConstantTree.CoeffAndVar.map(e=>{var n,a,r,o;let s={sign:"",coeff:(null!==(n=e.match(/[0-9]{1,}/))&&void 0!==n?n:[""])[0],var:(null!==(a=e.match(/[A-Za-z]/))&&void 0!==a?a:[""])[0]};1===(null!==(r=e.match(/[-]/))&&void 0!==r?r:[]).length?s.sign="-":((null!==(o=e.match(/[+]/))&&void 0!==o?o:[]).length,s.sign="+"),t.leftSideCoeffVarAndConstantTree.CoeffAndVar.push(`${"+"===s.sign?"-":"+"}${s.coeff}${s.var}`)}),t.rightSideCoeffVarAndConstantTree.CoeffAndVar=[],t.leftSideCoeffVarAndConstantTree.Constants=[],t),_likeVariableAndConstantAdder=t=>{if(1!==t.rightSideCoeffVarAndConstantTree.Constants.length){let e=0;t.rightSideCoeffVarAndConstantTree.Constants.map(t=>{e+=parseInt(t)}),t.rightSideCoeffVarAndConstantTree.Constants=[`${e}`]}return t.leftSideCoeffVarAndConstantTree.CoeffAndVar=(t=>{let e=[],n={vars:[],values:[]};t.map(e=>{var a;let r=(null!==(a=e.match(/[A-Za-z]/))&&void 0!==a?a:[""])[0];if(!n.vars.includes(r)){let e=[];t.map(t=>{var n,a;(null!==(n=t.match(/[A-Za-z]/))&&void 0!==n?n:[""])[0]===r&&(t.match(/[+-]?[0-9]{1,}/)?e.push((null!==(a=t.match(/[+-]?[0-9]{1,}/))&&void 0!==a?a:[""])[0]):2===t.length?e.push(`${t[0]}1`):e.push("1"))}),n.values.push(e),n.vars.push(r)}});for(let t=1;t<=n.vars.length;t++){let a=0;n.values[t-1].map(t=>{a+=parseInt(t)}),e.push(`${a<0?a:n.vars[0]===n.vars[t-1]?a:`+${a}`}${n.vars[t-1]}`)}return e})(t.leftSideCoeffVarAndConstantTree.CoeffAndVar),t};
