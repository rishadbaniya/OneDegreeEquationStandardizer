const makeItStandard=t=>{let e=new ThreeVariableEquation(t);var n=e.buidlatexFromRawInput(),a=_equationVarAndConstSeparator(e),t=buildLatexVarFromLeftAndConstFromRight(a),a=_likeVariableAndConstantAdder(a);return{latexArray:[n,t,buildLatexVarFromLeftAndConstFromRight(a)],leftVars:a.leftSideCoeffVarAndConstantTree.CoeffAndVar,rightConstant:a.rightSideCoeffVarAndConstantTree.Constants}},isRawEquationValid=e=>{const n="INVALID_EQUATION";if(!e.includes("="))throw n;["++","--","==","+=","-=","*","/"].map(t=>{if(e.includes(t))throw n})};class ThreeVariableEquation{constructor(t){this.rawInputEquation=t,isRawEquationValid(this.rawInputEquation);let e=t.replace(/\s*/g,""),n=(null!==(t=e.match(/.*(?=\=)/))&&void 0!==t?t:[""])[0],a=(null!==(t=e.match(/(?<=\=).*/))&&void 0!==t?t:[""])[0];this.leftSideCoeffVarAndConstantTree={CoeffAndVar:null!==(t=n.match(/(\+|\-)?[\d]*[A-Za-z]/g))&&void 0!==t?t:[],Constants:null!==(t=n.match(/(\+|\-)?[\d]{1,}(?![A-Za-z0-9])/g))&&void 0!==t?t:[]},this.rightSideCoeffVarAndConstantTree={CoeffAndVar:null!==(t=a.match(/(\+|\-)?[\d]*[A-Za-z]/g))&&void 0!==t?t:[],Constants:null!==(t=a.match(/(\+|\-)?[\d]{1,}(?![A-Za-z0-9])/g))&&void 0!==t?t:[]}}buidlatexFromRawInput(){return this.rawInputEquation.replace(/([A-Za-z])/g,"\\text{$1}")}}const buildLatexVarFromLeftAndConstFromRight=t=>{let e="";return t.leftSideCoeffVarAndConstantTree.CoeffAndVar.map(t=>{e+=t.replace(/([A-Za-z])/,String.raw`\text{$1}`)}),e+="=",0!==t.rightSideCoeffVarAndConstantTree.Constants.length?t.rightSideCoeffVarAndConstantTree.Constants.map(t=>{e+=t}):e+="0",e},_equationVarAndConstSeparator=a=>(a.leftSideCoeffVarAndConstantTree.Constants.map(t=>{var e;let n={_sign:"",_value:(null!==(e=t.match(/[0-9]{1,}/))&&void 0!==e?e:[""])[0]};1===(null!==(e=t.match(/[-]/))&&void 0!==e?e:[]).length?n._sign="-":((null!==(t=t.match(/[+]/))&&void 0!==t?t:[]).length,n._sign="+"),a.rightSideCoeffVarAndConstantTree.Constants.push(`${"+"===n._sign?"-":"+"}${n._value}`)}),a.rightSideCoeffVarAndConstantTree.CoeffAndVar.map(t=>{var e;let n={sign:"",coeff:(null!==(e=t.match(/[0-9]{1,}/))&&void 0!==e?e:[""])[0],var:(null!==(e=t.match(/[A-Za-z]/))&&void 0!==e?e:[""])[0]};1===(null!==(e=t.match(/[-]/))&&void 0!==e?e:[]).length?n.sign="-":((null!==(t=t.match(/[+]/))&&void 0!==t?t:[]).length,n.sign="+"),a.leftSideCoeffVarAndConstantTree.CoeffAndVar.push(`${"+"===n.sign?"-":"+"}${n.coeff}${n.var}`)}),a.rightSideCoeffVarAndConstantTree.CoeffAndVar=[],a.leftSideCoeffVarAndConstantTree.Constants=[],1<a.rightSideCoeffVarAndConstantTree.Constants.length&&(a.rightSideCoeffVarAndConstantTree.Constants[0]=a.rightSideCoeffVarAndConstantTree.Constants[0].replace(/[+]/,"")),a.leftSideCoeffVarAndConstantTree.CoeffAndVar[0]=a.leftSideCoeffVarAndConstantTree.CoeffAndVar[0].replace(/[+]/,""),a),_likeVariableAndConstantAdder=t=>{if(1!==t.rightSideCoeffVarAndConstantTree.Constants.length){let e=0;t.rightSideCoeffVarAndConstantTree.Constants.map(t=>{e+=parseInt(t)}),t.rightSideCoeffVarAndConstantTree.Constants=[`${e}`]}return t.leftSideCoeffVarAndConstantTree.CoeffAndVar=(e=>{let n=[],r={vars:[],values:[]};e.map(t=>{let a=(null!==(t=t.match(/[A-Za-z]/))&&void 0!==t?t:[""])[0];if(!r.vars.includes(a)){let n=[];e.map(t=>{var e;(null!==(e=t.match(/[A-Za-z]/))&&void 0!==e?e:[""])[0]===a&&(t.match(/[+-]?[0-9]{1,}/)?n.push((null!==(e=t.match(/[+-]?[0-9]{1,}/))&&void 0!==e?e:[""])[0]):2===t.length?n.push(`${t[0]}1`):n.push("1"))}),r.values.push(n),r.vars.push(a)}});for(let t=1;t<=r.vars.length;t++){let e=0;r.values[t-1].map(t=>{e+=parseInt(t)}),n.push(`${e<0?-1===e?"-":e:r.vars[0]===r.vars[t-1]?1===e?"":e:`+${1===e?"":e}`}${r.vars[t-1]}`)}return n})(t.leftSideCoeffVarAndConstantTree.CoeffAndVar),1<t.rightSideCoeffVarAndConstantTree.Constants.length&&(t.rightSideCoeffVarAndConstantTree.Constants[0]=t.rightSideCoeffVarAndConstantTree.Constants[0].replace(/[+]/,"")),t.leftSideCoeffVarAndConstantTree.CoeffAndVar[0]=t.leftSideCoeffVarAndConstantTree.CoeffAndVar[0].replace(/[+]/,""),t};export{makeItStandard};